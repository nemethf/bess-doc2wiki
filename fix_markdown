#!/usr/bin/env python3
# Fix markdown output of pseudomuto/protoc-gen-doc

# Copyright (C) 2020 Felicián Németh
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import argparse
import re
import sys

# This can be optimized, but it's fast enough.

def fix_and_write_str(string, needs_fixing, outfile):
  if needs_fixing:
    replacements = {
      r'&gt;': '>',
      r'&lt;': '<',
      r'&#39;': "'",
    }
    for pattern, fix in replacements.items():
      string = re.sub(pattern, fix, string)

  outfile.write(string)


def fix(infile, outfile):
  inside = False
  for line in infile:
    # Protect agains runaway `
    # E.g.: L2ForwardCommandPopulateArg
    match = re.search(r'^\s*$', line)
    if match:
      inside = False
    match = re.search(r'`', line)
    while match:
      beginning = line[:match.start(0) + 1]
      fix_and_write_str(beginning, inside, outfile)
      inside = not inside
      line = line[match.end(0):]
      match = re.search(r'`', line)
    fix_and_write_str(line, inside, outfile)


if __name__ == '__main__':
  parser = argparse.ArgumentParser(
    description='Fix markdown output of pseudomuto/protoc-gen-doc.')
  parser.add_argument('infile', nargs='?',
                      type=argparse.FileType('r'), default=sys.stdin)
  parser.add_argument('outfile', nargs='?',
                      type=argparse.FileType('w'), default=sys.stdout)
  args = parser.parse_args()
  fix(args.infile, args.outfile)
